/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;
import model.*;

import java.util.List;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import java.util.Set;
import java.util.Vector;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import java.awt.Dimension;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.ListSelectionModel;
import javax.swing.JTextField;
import javax.swing.JLabel;
import javax.swing.SwingConstants;
import javax.swing.JButton;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JComboBox;
import java.awt.event.ItemListener;
import java.sql.Date;
import java.sql.Timestamp;
import java.text.DecimalFormat;
import java.awt.event.ItemEvent;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.border.EtchedBorder;
import java.awt.Color;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.JScrollPane;

/**
 *
 * @author Anthony & Alex
 */
public class MainWindow extends javax.swing.JFrame {

    /**
     * Creates new form MainWindow
     */
    public MainWindow() {
    	setResizable(false);
    	getContentPane().setMinimumSize(new Dimension(750, 770));
    	getContentPane().setPreferredSize(new Dimension(750, 770));
    	getContentPane().setSize(new Dimension(750, 770));
    	getContentPane().setMaximumSize(new Dimension(1920, 1080));
        
        this.myDataBase = new MyDataBase(); //on pourrait penser Ã  une solution qui utilise la mÃªme instance de Connexion que celle de la classe de Test
        List cats = new ArrayList();
        cats.add(new Category(-1,"")); //Rendre vide la combobox au dÃ©marrage
        cats.addAll(Category.buffer);
        
        Comparator<Category> byId = Comparator.comparing(Category::getID);
        Set<Category> mySet = new HashSet<>(cats);
        List<Category> listcats = new ArrayList<>(mySet); //retirer les doublons
        Collections.sort(listcats, byId); //afficher la categorie vide en premier (id = -1)
        
        ArrayList<Promotion> promoList = new ArrayList<Promotion>();
        promoList.add(null);
        promoList.addAll(Promotion.buffer);
                
        modeleDesCategories_search = new DefaultComboBoxModel(listcats.toArray());
        modeleDesCategories_result = new DefaultComboBoxModel(listcats.toArray());
        modelCatSubcatCatList = new DefaultComboBoxModel(listcats.toArray());
        modeleCatSubcatRechercheParCat = new DefaultComboBoxModel(listcats.toArray());
        modelCatSubcatSubcatCat = new DefaultComboBoxModel(listcats.toArray());
        modelePromotionList = new DefaultComboBoxModel(promoList.toArray());
        modelPromotionCat = new DefaultComboBoxModel(listcats.toArray());
        modelPromotionSubcat = new DefaultComboBoxModel(new ArrayList().toArray());
        modelPromotionSearchResult = new DefaultComboBoxModel(new ArrayList().toArray());;
        
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    /**
     * 
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane_fonctions = new javax.swing.JTabbedPane();
        jPanel_produits = new javax.swing.JPanel();
        jPanel_rechercheProduit = new javax.swing.JPanel();
        jLabel_libelle = new javax.swing.JLabel();
        jTextField_label = new javax.swing.JTextField();
        jLabel_Categorie = new javax.swing.JLabel();
        jComboBox_ListCat = new javax.swing.JComboBox<>();
        jLabel_SousCategorie = new javax.swing.JLabel();
        jComboBox_ListSubCat = new javax.swing.JComboBox<>();
        jButton_rechercher = new javax.swing.JButton();
        jButton_effacer = new javax.swing.JButton();
        jComboBox_SearchResult = new javax.swing.JComboBox<>();
        jComboBox_SearchResult.addItemListener(new ItemListener() {
        	public void itemStateChanged(ItemEvent e) {
        		//jComboBox_SearchResultItemStateChanged(e);
        	}
        });
        jComboBox_SearchResult.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jComboBox_SearchResultActionPerformed(e);
        	}
        });
        jPanel_produitSelection = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jTextField_resultId = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jComboBox_resultListCat = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jComboBox_resultListSubCat = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextField_resultLabel = new javax.swing.JTextField();
        jPanel_infosProduit = new javax.swing.JPanel();
        jLabel_description = new javax.swing.JLabel();
        jScrollPane_description = new javax.swing.JScrollPane();
        jTextArea_description = new javax.swing.JTextArea(5,15);
        jTextArea_description.setPreferredSize(new Dimension(5, 15));
        jLabel_price = new javax.swing.JLabel();
        jLabel_price.setHorizontalAlignment(SwingConstants.RIGHT);
        jTextField_price = new javax.swing.JTextField();
        jLabel_alertThreshold = new javax.swing.JLabel();
        jLabel_alertThreshold.setHorizontalAlignment(SwingConstants.RIGHT);
        jTextField_alertThreshold = new javax.swing.JTextField();
        jTextField_alertThreshold.setColumns(10);
        jButton_modifier = new javax.swing.JButton();
        jButton_modifier.setEnabled(false);
        jButton_ajouter = new javax.swing.JButton();
        jLabel_messageConfirmation = new javax.swing.JLabel();
        jLabel_messageConfirmation.setVisible(false);
        jPanel_catSubCat = new javax.swing.JPanel();
        jPanel_clients = new javax.swing.JPanel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu_fichier = new javax.swing.JMenu();
        jMenuItem_produits = new javax.swing.JMenuItem();
        jMenuItem_categories = new javax.swing.JMenuItem();
        jMenuItem_clients = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem_quitter = new javax.swing.JMenuItem();
        jMenu_about = new javax.swing.JMenu();
        jMenuItem_version = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion Boutique");
        setSize(new Dimension(745, 770));

        jTabbedPane_fonctions.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        jTabbedPane_fonctions.setAutoscrolls(true);
        jTabbedPane_fonctions.setMaximumSize(new java.awt.Dimension(1920, 1080));

        jPanel_produits.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        jPanel_produits.setAutoscrolls(true);
        jPanel_produits.setMaximumSize(new java.awt.Dimension(1920, 1080));

        jPanel_rechercheProduit.setBorder(javax.swing.BorderFactory.createTitledBorder("Recherche de produit"));

        jLabel_libelle.setText("Libellé");

        jTextField_label.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_labelActionPerformed(evt);
            }
        });

        jLabel_Categorie.setText("Catégorie");

        jComboBox_ListCat.setModel(modeleDesCategories_search);
        jComboBox_ListCat.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_ListCatItemStateChanged(evt);
            }
        });
        jComboBox_ListCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_ListCatActionPerformed(evt);
            }
        });

        jLabel_SousCategorie.setText("Sous-catégorie");

        jComboBox_ListSubCat.setModel(modeleDesSousCategories_search);
        jComboBox_ListSubCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_ListSubCatActionPerformed(evt);
            }
        });

        jButton_rechercher.setText("Rechercher");
        jButton_rechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_rechercherActionPerformed(evt);
            }
        });

        jButton_effacer.setText("Effacer");
        jButton_effacer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_effacerActionPerformed(evt);
            }
        });
        
        
        
        lblNewLabel_1 = new JLabel("R\u00E9sultat");
        lblNewLabel_1.setHorizontalAlignment(SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel_rechercheProduitLayout = new javax.swing.GroupLayout(jPanel_rechercheProduit);
        jPanel_rechercheProduitLayout.setHorizontalGroup(
        	jPanel_rechercheProduitLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel_rechercheProduitLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(jPanel_rechercheProduitLayout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(jPanel_rechercheProduitLayout.createSequentialGroup()
        					.addGroup(jPanel_rechercheProduitLayout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(lblNewLabel_1, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
        						.addComponent(jLabel_libelle)
        						.addComponent(jLabel_Categorie)
        						.addComponent(jLabel_SousCategorie))
        					.addGap(18)
        					.addGroup(jPanel_rechercheProduitLayout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(jComboBox_SearchResult, 0, 585, Short.MAX_VALUE)
        						.addComponent(jComboBox_ListCat, Alignment.LEADING, 0, 585, Short.MAX_VALUE)
        						.addComponent(jComboBox_ListSubCat, Alignment.LEADING, 0, 585, Short.MAX_VALUE)
        						.addComponent(jTextField_label, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 591, Short.MAX_VALUE)))
        				.addGroup(jPanel_rechercheProduitLayout.createSequentialGroup()
        					.addGap(516)
        					.addComponent(jButton_effacer)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(jButton_rechercher, GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)))
        			.addGap(13))
        );
        jPanel_rechercheProduitLayout.setVerticalGroup(
        	jPanel_rechercheProduitLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel_rechercheProduitLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(jPanel_rechercheProduitLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel_libelle)
        				.addComponent(jTextField_label, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(jPanel_rechercheProduitLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel_Categorie)
        				.addComponent(jComboBox_ListCat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(jPanel_rechercheProduitLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel_SousCategorie)
        				.addComponent(jComboBox_ListSubCat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(jPanel_rechercheProduitLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jButton_effacer)
        				.addComponent(jButton_rechercher))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel_rechercheProduitLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblNewLabel_1)
        				.addComponent(jComboBox_SearchResult, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap(27, Short.MAX_VALUE))
        );
        jPanel_rechercheProduit.setLayout(jPanel_rechercheProduitLayout);

        jPanel_produitSelection.setBorder(javax.swing.BorderFactory.createTitledBorder("Produit sélectionné"));

        jLabel7.setText("ID");

        jTextField_resultId.setEditable(false);

        jLabel8.setText("Catégorie");

        jComboBox_resultListCat.setModel(modeleDesCategories_result);
        jComboBox_resultListCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_resultListCatActionPerformed(evt);
            }
        });

        jLabel9.setText("Sous-catégorie");

        jComboBox_resultListSubCat.setModel(modeleDesSousCategories_result);

        jLabel1.setText("Libellelé");

        javax.swing.GroupLayout jPanel_produitSelectionLayout = new javax.swing.GroupLayout(jPanel_produitSelection);
        jPanel_produitSelectionLayout.setHorizontalGroup(
        	jPanel_produitSelectionLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel_produitSelectionLayout.createSequentialGroup()
        			.addGap(17)
        			.addGroup(jPanel_produitSelectionLayout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(jLabel7)
        				.addComponent(jLabel9)
        				.addComponent(jLabel8))
        			.addGap(18)
        			.addGroup(jPanel_produitSelectionLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jComboBox_resultListSubCat, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(jComboBox_resultListCat, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addGroup(jPanel_produitSelectionLayout.createSequentialGroup()
        					.addComponent(jTextField_resultId, GroupLayout.PREFERRED_SIZE, 190, GroupLayout.PREFERRED_SIZE)
        					.addGap(30)
        					.addComponent(jLabel1)
        					.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        					.addComponent(jTextField_resultLabel, GroupLayout.PREFERRED_SIZE, 317, GroupLayout.PREFERRED_SIZE)))
        			.addContainerGap())
        );
        jPanel_produitSelectionLayout.setVerticalGroup(
        	jPanel_produitSelectionLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel_produitSelectionLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(jPanel_produitSelectionLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel7)
        				.addComponent(jTextField_resultId, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jTextField_resultLabel, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel1))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(jPanel_produitSelectionLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel8)
        				.addComponent(jComboBox_resultListCat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(jPanel_produitSelectionLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jComboBox_resultListSubCat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel9))
        			.addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel_produitSelection.setLayout(jPanel_produitSelectionLayout);

        jPanel_infosProduit.setBorder(javax.swing.BorderFactory.createTitledBorder("Informations du produit"));

        jLabel_description.setText("Description");

        jTextArea_description.setColumns(20);
        jTextArea_description.setRows(5);
        jScrollPane_description.setColumnHeaderView(jTextArea_description);

        jLabel_price.setText("Prix (en \u20AC)");

        jLabel_alertThreshold.setText("Seuil d'alerte");
        
        jTextField_stock = new JTextField();
        jTextField_stock.setEditable(false);
        jTextField_stock.setText("0");
        jTextField_stock.setColumns(10);
        
        lblNewLabel = new JLabel("Stock");
        lblNewLabel.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jButton_addStock = new JButton("Ajouter du stock");
        jButton_addStock.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_addStockActionPerformed(e);
        	}
        });
        
        jTextField_addStockValue = new JTextField();
        jTextField_addStockValue.setColumns(10);
        
        jLabel_discountRate = new JLabel("R\u00E9duction (en %)");
        jLabel_discountRate.setHorizontalAlignment(SwingConstants.LEFT);
        
        jTextField_discountRate = new JTextField();
        jTextField_discountRate.setEditable(false);
        jTextField_discountRate.setColumns(10);
        
        jLabel_prixDeVente = new JLabel("Prix de Vente");
        jLabel_prixDeVente.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_prixDeVente = new JTextField();
        jTextField_prixDeVente.setEditable(false);
        jTextField_prixDeVente.setColumns(10);

        javax.swing.GroupLayout jPanel_infosProduitLayout = new javax.swing.GroupLayout(jPanel_infosProduit);
        jPanel_infosProduitLayout.setHorizontalGroup(
        	jPanel_infosProduitLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel_infosProduitLayout.createSequentialGroup()
        			.addGap(19)
        			.addGroup(jPanel_infosProduitLayout.createParallelGroup(Alignment.TRAILING, false)
        				.addComponent(jLabel_alertThreshold, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(jLabel_description)
        				.addComponent(jLabel_price, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        			.addGap(36)
        			.addGroup(jPanel_infosProduitLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jScrollPane_description, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 547, Short.MAX_VALUE)
        				.addGroup(jPanel_infosProduitLayout.createSequentialGroup()
        					.addGroup(jPanel_infosProduitLayout.createParallelGroup(Alignment.TRAILING, false)
        						.addComponent(jTextField_price, Alignment.LEADING)
        						.addComponent(jTextField_alertThreshold, Alignment.LEADING))
        					.addGap(18)
        					.addGroup(jPanel_infosProduitLayout.createParallelGroup(Alignment.LEADING, false)
        						.addGroup(jPanel_infosProduitLayout.createSequentialGroup()
        							.addComponent(lblNewLabel, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        							.addGap(18)
        							.addComponent(jTextField_stock, GroupLayout.PREFERRED_SIZE, 115, GroupLayout.PREFERRED_SIZE))
        						.addGroup(jPanel_infosProduitLayout.createSequentialGroup()
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(jLabel_discountRate, GroupLayout.PREFERRED_SIZE, 102, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addComponent(jTextField_discountRate, 0, 0, Short.MAX_VALUE)))
        					.addGroup(jPanel_infosProduitLayout.createParallelGroup(Alignment.LEADING)
        						.addGroup(jPanel_infosProduitLayout.createSequentialGroup()
        							.addGap(27)
        							.addComponent(jButton_addStock))
        						.addGroup(jPanel_infosProduitLayout.createSequentialGroup()
        							.addGap(61)
        							.addComponent(jLabel_prixDeVente, GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE)))
        					.addGap(18)
        					.addGroup(jPanel_infosProduitLayout.createParallelGroup(Alignment.LEADING, false)
        						.addComponent(jTextField_prixDeVente)
        						.addComponent(jTextField_addStockValue, GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE))))
        			.addGap(30))
        );
        jPanel_infosProduitLayout.setVerticalGroup(
        	jPanel_infosProduitLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel_infosProduitLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(jPanel_infosProduitLayout.createParallelGroup(Alignment.LEADING)
        				.addComponent(jScrollPane_description, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_description))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(jPanel_infosProduitLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jTextField_price, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_price)
        				.addComponent(jLabel_prixDeVente)
        				.addComponent(jTextField_prixDeVente, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_discountRate)
        				.addComponent(jTextField_discountRate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(jPanel_infosProduitLayout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel_alertThreshold)
        				.addComponent(jTextField_alertThreshold, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblNewLabel)
        				.addComponent(jTextField_stock, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jButton_addStock)
        				.addComponent(jTextField_addStockValue, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap(33, Short.MAX_VALUE))
        );
        jPanel_infosProduit.setLayout(jPanel_infosProduitLayout);

        jButton_modifier.setText("Modifier");
        jButton_modifier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_modifierActionPerformed(evt);
            }
        });

        jButton_ajouter.setText("Ajouter");
        jButton_ajouter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_ajouterActionPerformed(evt);
            }
        });

        jLabel_messageConfirmation.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_messageConfirmation.setText("message de confirmation");
        jLabel_messageConfirmation.setToolTipText("");

        javax.swing.GroupLayout jPanel_produitsLayout = new javax.swing.GroupLayout(jPanel_produits);
        jPanel_produitsLayout.setHorizontalGroup(
        	jPanel_produitsLayout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(jPanel_produitsLayout.createSequentialGroup()
        			.addGroup(jPanel_produitsLayout.createParallelGroup(Alignment.LEADING)
        				.addGroup(jPanel_produitsLayout.createSequentialGroup()
        					.addGap(185)
        					.addComponent(jButton_modifier)
        					.addGap(226)
        					.addComponent(jButton_ajouter)
        					.addGap(0, 187, Short.MAX_VALUE))
        				.addComponent(jLabel_messageConfirmation, GroupLayout.DEFAULT_SIZE, 734, Short.MAX_VALUE)
        				.addGroup(jPanel_produitsLayout.createParallelGroup(Alignment.TRAILING, false)
        					.addComponent(jPanel_produitSelection, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 705, Short.MAX_VALUE)
        					.addComponent(jPanel_infosProduit, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 705, Short.MAX_VALUE)
        					.addComponent(jPanel_rechercheProduit, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        			.addContainerGap())
        );
        jPanel_produitsLayout.setVerticalGroup(
        	jPanel_produitsLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel_produitsLayout.createSequentialGroup()
        			.addComponent(jPanel_rechercheProduit, GroupLayout.PREFERRED_SIZE, 180, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addComponent(jPanel_produitSelection, GroupLayout.PREFERRED_SIZE, 110, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addComponent(jPanel_infosProduit, GroupLayout.PREFERRED_SIZE, 203, GroupLayout.PREFERRED_SIZE)
        			.addGap(54)
        			.addGroup(jPanel_produitsLayout.createParallelGroup(Alignment.LEADING, false)
        				.addComponent(jButton_ajouter)
        				.addComponent(jButton_modifier))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(jLabel_messageConfirmation)
        			.addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel_produits.setLayout(jPanel_produitsLayout);

        jTabbedPane_fonctions.addTab("Produits", jPanel_produits);
        
        jPanel_createUpdateCat = new JPanel();
        jPanel_createUpdateCat.setBorder(javax.swing.BorderFactory.createTitledBorder("Gestion Catégorie"));
        
        
        jPanel_createUpdateSubcat = new JPanel();
        jPanel_createUpdateSubcat.setBorder(javax.swing.BorderFactory.createTitledBorder("Gestion Sous-catégorie"));
        
        javax.swing.GroupLayout jPanel_catSubCatLayout = new javax.swing.GroupLayout(jPanel_catSubCat);
        jPanel_catSubCatLayout.setHorizontalGroup(
        	jPanel_catSubCatLayout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(jPanel_catSubCatLayout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(jPanel_catSubCatLayout.createParallelGroup(Alignment.TRAILING, false)
        				.addComponent(jPanel_createUpdateSubcat, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 725, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jPanel_createUpdateCat, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 725, GroupLayout.PREFERRED_SIZE))
        			.addGap(19))
        );
        jPanel_catSubCatLayout.setVerticalGroup(
        	jPanel_catSubCatLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel_catSubCatLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jPanel_createUpdateCat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addGap(21)
        			.addComponent(jPanel_createUpdateSubcat, GroupLayout.PREFERRED_SIZE, 231, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(226, Short.MAX_VALUE))
        );
        
        jComboBox_catSubCatRechercheParCat = new JComboBox();
        jComboBox_catSubCatRechercheParCat.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jComboBox_catSubCatRechercheParCatActionPerformed(e);
        	}
        });
        jComboBox_catSubCatRechercheParCat.setModel(modeleCatSubcatRechercheParCat);
        
        jLabel_catSubcatRechercheParCat = new JLabel("Recherche");
        jLabel_catSubcatRechercheParCat.setToolTipText("Recherche par cat\u00E9gorie");
        jLabel_catSubcatRechercheParCat.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jLabel_catSubcatRechercheSubcat = new JLabel("Sous-cat\u00E9gorie");
        jLabel_catSubcatRechercheSubcat.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jComboBox_catSubcatSubcatList = new JComboBox();
        jComboBox_catSubcatSubcatList.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jComboBox_catSubcatSubcatListActionPerformed(e);
        	}
        });
        
        jLabel_catSubcatSubcatID = new JLabel("ID");
        jLabel_catSubcatSubcatID.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_catSubcatSubcatID = new JTextField();
        jTextField_catSubcatSubcatID.setEditable(false);
        jTextField_catSubcatSubcatID.setColumns(10);
        
        jLabel_catSubcatSubcatName = new JLabel("Libell\u00E9");
        jLabel_catSubcatSubcatName.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_catSubcatSubcatName = new JTextField();
        jTextField_catSubcatSubcatName.setColumns(10);
        
        jButton_catSubcatModifierSubcat = new JButton("Modifier");
        jButton_catSubcatModifierSubcat.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_catSubcatModifierSubcatActionPerformed(e);
        	}
        });
        jButton_catSubcatModifierSubcat.setEnabled(false);
        
        jButton_catSubcatAjouterSubcat = new JButton("Ajouter");
        jButton_catSubcatAjouterSubcat.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_catSubcatAjouterSubcatActionPerformed(e);
        	}
        });
        
        jButton_catSubcatEffacerSubcat = new JButton("Effacer");
        jButton_catSubcatEffacerSubcat.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_catSubcatEffacerSubcatActionPerformed(e);
        	}
        });
        
        jComboBox_catSubcatSubcatCat = new JComboBox();
        jComboBox_catSubcatSubcatCat.setModel(modelCatSubcatSubcatCat);
        
        jLabel_catSubcatCat = new JLabel("Cat\u00E9gorie");
        GroupLayout gl_jPanel_createUpdateSubcat = new GroupLayout(jPanel_createUpdateSubcat);
        gl_jPanel_createUpdateSubcat.setHorizontalGroup(
        	gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_jPanel_createUpdateSubcat.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.TRAILING)
        				.addComponent(jLabel_catSubcatRechercheParCat, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_catSubcatRechercheSubcat)
        				.addComponent(jLabel_catSubcatSubcatID, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_catSubcatCat, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.TRAILING)
        				.addComponent(jComboBox_catSubcatSubcatCat, 0, 595, Short.MAX_VALUE)
        				.addComponent(jComboBox_catSubCatRechercheParCat, 0, 595, Short.MAX_VALUE)
        				.addComponent(jComboBox_catSubcatSubcatList, 0, 595, Short.MAX_VALUE)
        				.addGroup(gl_jPanel_createUpdateSubcat.createSequentialGroup()
        					.addGap(530)
        					.addComponent(jButton_catSubcatEffacerSubcat, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        				.addGroup(gl_jPanel_createUpdateSubcat.createSequentialGroup()
        					.addGroup(gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.TRAILING)
        						.addGroup(gl_jPanel_createUpdateSubcat.createSequentialGroup()
        							.addComponent(jTextField_catSubcatSubcatID, GroupLayout.PREFERRED_SIZE, 152, GroupLayout.PREFERRED_SIZE)
        							.addPreferredGap(ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
        							.addComponent(jLabel_catSubcatSubcatName, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE))
        						.addComponent(jButton_catSubcatModifierSubcat, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE))
        					.addGap(18)
        					.addGroup(gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.LEADING)
        						.addComponent(jButton_catSubcatAjouterSubcat, GroupLayout.PREFERRED_SIZE, 78, GroupLayout.PREFERRED_SIZE)
        						.addComponent(jTextField_catSubcatSubcatName, GroupLayout.PREFERRED_SIZE, 336, GroupLayout.PREFERRED_SIZE))))
        			.addGap(12))
        );
        gl_jPanel_createUpdateSubcat.setVerticalGroup(
        	gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_jPanel_createUpdateSubcat.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jComboBox_catSubCatRechercheParCat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_catSubcatRechercheParCat))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jComboBox_catSubcatSubcatList, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_catSubcatRechercheSubcat))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(jButton_catSubcatEffacerSubcat)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jComboBox_catSubcatSubcatCat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_catSubcatCat))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jTextField_catSubcatSubcatID, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_catSubcatSubcatID)
        				.addComponent(jTextField_catSubcatSubcatName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_catSubcatSubcatName))
        			.addGap(18)
        			.addGroup(gl_jPanel_createUpdateSubcat.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jButton_catSubcatModifierSubcat)
        				.addComponent(jButton_catSubcatAjouterSubcat))
        			.addGap(53))
        );
        jPanel_createUpdateSubcat.setLayout(gl_jPanel_createUpdateSubcat);
        
        jComboBox_catSubcatCatList = new JComboBox();
        jComboBox_catSubcatCatList.setModel(modelCatSubcatCatList);
        jComboBox_catSubcatCatList.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jComboBox_catListCatListActionPerformed(e);
        	}
        });
        jComboBox_catSubcatCatList.setModel(modeleDesCategories_search);
        
        jLabel_catSubcatRecherche = new JLabel("Recherche");
        jLabel_catSubcatRecherche.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jlabel_catSubcatCatID = new JLabel("ID");
        jlabel_catSubcatCatID.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_catSubcatCatID = new JTextField();
        jTextField_catSubcatCatID.setEditable(false);
        jTextField_catSubcatCatID.setColumns(10);
        
        jLabel_catSubcatCatName = new JLabel("Libell\u00E9");
        jLabel_catSubcatCatName.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_catSubcatCatName = new JTextField();
        jTextField_catSubcatCatName.setColumns(10);
        
        jButton_catSubcatAjouterCat = new JButton("Ajouter");
        jButton_catSubcatAjouterCat.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_catSubcatAjouterCatActionPerformed(e);
        	}
        });
        
        jButton_catSubcatModifierCat = new JButton("Modifier");
        jButton_catSubcatModifierCat.setEnabled(false);
        jButton_catSubcatModifierCat.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_catSubcatModifierCatActionPerformed(e);
        	}
        });
        
        jButton_catSubcatEffacerCat = new JButton("Effacer");
        jButton_catSubcatEffacerCat.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		 jButton_catSubcatEffacerCatActionPerformed(e);
        	}
        });
        
        jPanel_promotions = new JPanel();
        jTabbedPane_fonctions.addTab("Promotions", null, jPanel_promotions, null);
        
        jPanel_promotionInfo = new JPanel();
        jPanel_promotionInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Informations Promotion"));
        
        jPanel_promotedProduct = new JPanel();
        jPanel_promotedProduct.setBorder(new TitledBorder(null, "Produits Concern\u00E9s", TitledBorder.LEADING, TitledBorder.TOP, null, null));
        
        GroupLayout gl_jPanel_promotions = new GroupLayout(jPanel_promotions);
        gl_jPanel_promotions.setHorizontalGroup(
        	gl_jPanel_promotions.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_jPanel_promotions.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_jPanel_promotions.createParallelGroup(Alignment.TRAILING)
        				.addComponent(jPanel_promotedProduct, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(jPanel_promotionInfo, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 723, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap(31, Short.MAX_VALUE))
        );
        gl_jPanel_promotions.setVerticalGroup(
        	gl_jPanel_promotions.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_jPanel_promotions.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jPanel_promotionInfo, GroupLayout.PREFERRED_SIZE, 244, GroupLayout.PREFERRED_SIZE)
        			.addGap(18)
        			.addComponent(jPanel_promotedProduct, GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
        			.addContainerGap())
        );
        
        jScrollPane_promotionPromotedProduct = new JScrollPane();
        
        JLabel jLabel_promotionProductName = new JLabel("Libell\u00E9");
        jLabel_promotionProductName.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_promotionProductName = new JTextField();
        jTextField_promotionProductName.setEnabled(false);
        jTextField_promotionProductName.setColumns(10);
        
        jButton_promotionProductSupprimer = new JButton("Supprimer");
        jButton_promotionProductSupprimer.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_promotionProductSupprimerActionPerformed(e);
        	}
        });
        jButton_promotionProductSupprimer.setEnabled(false);
        
        jComboBox_promotionCat = new JComboBox();
        jComboBox_promotionCat.setEnabled(false);
        jComboBox_promotionCat.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jComboBox_promotionCatActionPerformed(e);
        	}
        });
        jComboBox_promotionCat.setModel(modelPromotionCat);
        
        JLabel jPanel_promotionCat = new JLabel("Cat\u00E9gorie");
        jPanel_promotionCat.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jComboBox_promotionSubcat = new JComboBox();
        jComboBox_promotionSubcat.setEnabled(false);
        
        JLabel jPanel_promotionSubcat = new JLabel("Sous-cat\u00E9gorie");
        jPanel_promotionSubcat.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jButton_promotionProductRechercher = new JButton("Rechercher");
        jButton_promotionProductRechercher.setEnabled(false);
        jButton_promotionProductRechercher.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_promotionRechercherActionPerformed(e);
        	}
        });
        
        jButton_promotionProductEffacer = new JButton("Effacer");
        jButton_promotionProductEffacer.setEnabled(false);
        
        jComboBox_promotionResult = new JComboBox();
        jComboBox_promotionResult.setEnabled(false);
        
        jLabel_promotionResult = new JLabel("R\u00E9sultat");
        jLabel_promotionResult.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jButton_promotionProductAjouter = new JButton("Ajouter");
        jButton_promotionProductAjouter.setEnabled(false);
        jButton_promotionProductAjouter.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_promotionProductAjouterActionPerformed(e);
        	}
        });
        
        GroupLayout gl_jPanel_promotedProduct = new GroupLayout(jPanel_promotedProduct);
        gl_jPanel_promotedProduct.setHorizontalGroup(
        	gl_jPanel_promotedProduct.createParallelGroup(Alignment.TRAILING)
        		.addGroup(gl_jPanel_promotedProduct.createSequentialGroup()
        			.addContainerGap(335, Short.MAX_VALUE)
        			.addComponent(jButton_promotionProductSupprimer)
        			.addGap(295))
        		.addGroup(gl_jPanel_promotedProduct.createSequentialGroup()
        			.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.TRAILING)
        				.addGroup(gl_jPanel_promotedProduct.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(jScrollPane_promotionPromotedProduct, GroupLayout.PREFERRED_SIZE, 681, GroupLayout.PREFERRED_SIZE))
        				.addGroup(gl_jPanel_promotedProduct.createSequentialGroup()
        					.addGap(20)
        					.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.TRAILING)
        						.addComponent(jLabel_promotionResult, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
        						.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.LEADING)
        							.addComponent(jPanel_promotionSubcat, GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
        							.addComponent(jPanel_promotionCat, GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
        							.addComponent(jLabel_promotionProductName, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 79, GroupLayout.PREFERRED_SIZE)))
        					.addGap(18)
        					.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.TRAILING)
        						.addComponent(jComboBox_promotionSubcat, 0, 578, Short.MAX_VALUE)
        						.addComponent(jComboBox_promotionCat, 0, 578, Short.MAX_VALUE)
        						.addComponent(jTextField_promotionProductName, GroupLayout.DEFAULT_SIZE, 578, Short.MAX_VALUE)
        						.addGroup(gl_jPanel_promotedProduct.createSequentialGroup()
        							.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.TRAILING)
        								.addComponent(jComboBox_promotionResult, Alignment.LEADING, 0, 476, Short.MAX_VALUE)
        								.addGroup(gl_jPanel_promotedProduct.createSequentialGroup()
        									.addGap(403)
        									.addComponent(jButton_promotionProductEffacer)))
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.LEADING, false)
        								.addComponent(jButton_promotionProductAjouter, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        								.addComponent(jButton_promotionProductRechercher, GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))))))
        			.addContainerGap())
        );
        gl_jPanel_promotedProduct.setVerticalGroup(
        	gl_jPanel_promotedProduct.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_jPanel_promotedProduct.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel_promotionProductName)
        				.addComponent(jTextField_promotionProductName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jPanel_promotionCat)
        				.addComponent(jComboBox_promotionCat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jPanel_promotionSubcat)
        				.addComponent(jComboBox_promotionSubcat, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jButton_promotionProductRechercher)
        				.addComponent(jButton_promotionProductEffacer))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(gl_jPanel_promotedProduct.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel_promotionResult)
        				.addComponent(jComboBox_promotionResult, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jButton_promotionProductAjouter))
        			.addGap(33)
        			.addComponent(jScrollPane_promotionPromotedProduct, GroupLayout.PREFERRED_SIZE, 177, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(jButton_promotionProductSupprimer)
        			.addContainerGap(22, Short.MAX_VALUE))
        );
        
        
        
        
        String[] promotedProductColumnName = {"ID", "Catégorie", "Sous-catégorie", "Libellé", "Prix Initial", "Prix Final"};
        Object[][] data = {};	
        
        modelJTable_promotionPromotedProducts = new DefaultTableModel(data, promotedProductColumnName) {
        	@Override 
        	public boolean isCellEditable(int row, int column) {
        		return false;
        	}
        };
       
        jTable_promotionPromotedProducts = new JTable();
        jTable_promotionPromotedProducts.setModel(modelJTable_promotionPromotedProducts);
        
        TableColumn column = null;
        for(int i = 0; i < promotedProductColumnName.length; i++) {
        	column = jTable_promotionPromotedProducts.getColumnModel().getColumn(i);
        	if (i==0 || i==4 || i==5) {
        		column.setPreferredWidth(25);
        	}
        	else if (i==3) {
        		column.setPreferredWidth(190);
        	}
        }
        
        jTable_promotionPromotedProducts.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        jTable_promotionPromotedProducts.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        	public void valueChanged(ListSelectionEvent e) {
        		jTable_promotionPromotedProductsValueChanged(e);
        	}
        });
        
        jScrollPane_promotionPromotedProduct.setViewportView(jTable_promotionPromotedProducts);
        jPanel_promotedProduct.setLayout(gl_jPanel_promotedProduct);
        
        
        jLabel_promotionRecherche = new JLabel("Recherche");
        jLabel_promotionRecherche.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jComboBox_promotionPromoList = new JComboBox();
        jComboBox_promotionPromoList.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jComboBox_promotionPromoListActionPerformed(e);
        	}
        });
        jComboBox_promotionPromoList.setModel(modelePromotionList);
        
        
        jButton_promotionEffacer = new JButton("Effacer");
        jButton_promotionEffacer.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_promotionEffacerActionPerformed(e);
        	}
        });
        
        jTextField_promotionID = new JTextField();
        jTextField_promotionID.setEditable(false);
        jTextField_promotionID.setColumns(10);
        
        jLabel_promotionID = new JLabel("ID");
        jLabel_promotionID.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jLabel_promotionName = new JLabel("Libell\u00E9");
        jLabel_promotionName.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_promotionName = new JTextField();
        jTextField_promotionName.setColumns(10);
        
        jLabel_promotionDate = new JLabel("Date");
        jLabel_promotionDate.setHorizontalAlignment(SwingConstants.CENTER);
        
        jTextField_promotionEndDate = new JTextField();
        jTextField_promotionEndDate.setToolTipText("aaaa-mm-jj");
        jTextField_promotionEndDate.setColumns(10);
        
        jTextField_promotionStartDate = new JTextField();
        jTextField_promotionStartDate.setToolTipText("aaaa-mm-jj");
        jTextField_promotionStartDate.setColumns(10);
        
        jLabel_promotionDebut = new JLabel("D\u00E9but");
        jLabel_promotionDebut.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jLabel_promotionFin = new JLabel("Fin");
        jLabel_promotionFin.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_promotionStartTime = new JTextField();
        jTextField_promotionStartTime.setToolTipText("hh:mm");
        jTextField_promotionStartTime.setColumns(10);
        
        jTextField_promotionEndTime = new JTextField();
        jTextField_promotionEndTime.setToolTipText("hh:mm");
        jTextField_promotionEndTime.setColumns(10);
        
        jLabel_promotionHeure = new JLabel("Heure");
        jLabel_promotionHeure.setHorizontalAlignment(SwingConstants.CENTER);
        
        jTextField_promotionDiscountRate = new JTextField();
        jTextField_promotionDiscountRate.setToolTipText("");
        jTextField_promotionDiscountRate.setColumns(10);
        
        jLabel_promotionDiscountRate = new JLabel("Montant de la  R\u00E9duction (en %)");
        jLabel_promotionDiscountRate.setToolTipText("");
        jLabel_promotionDiscountRate.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jButton_promotionModifier = new JButton("Modifier");
        jButton_promotionModifier.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_promotionModiferActionPerformed(e);
        	}
        });
        jButton_promotionModifier.setEnabled(false);
        
        jButton_promotionAjouter = new JButton("Ajouter");
        jButton_promotionAjouter.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_promotionAjouterActionPerformed(e);
        	}
        });
        GroupLayout gl_jPanel_promotionInfo = new GroupLayout(jPanel_promotionInfo);
        gl_jPanel_promotionInfo.setHorizontalGroup(
        	gl_jPanel_promotionInfo.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_jPanel_promotionInfo.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.TRAILING)
        				.addComponent(jLabel_promotionFin, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_promotionDebut, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_promotionID, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_promotionRecherche, GroupLayout.PREFERRED_SIZE, 57, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.TRAILING, false)
        				.addComponent(jButton_promotionEffacer, GroupLayout.PREFERRED_SIZE, 83, GroupLayout.PREFERRED_SIZE)
        				.addGroup(gl_jPanel_promotionInfo.createSequentialGroup()
        					.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.TRAILING)
        						.addGroup(gl_jPanel_promotionInfo.createSequentialGroup()
        							.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.TRAILING)
        								.addComponent(jTextField_promotionEndDate)
        								.addComponent(jTextField_promotionStartDate, Alignment.LEADING)
        								.addComponent(jLabel_promotionDate, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
        							.addPreferredGap(ComponentPlacement.RELATED)
        							.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.LEADING, false)
        								.addComponent(jLabel_promotionHeure, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        								.addComponent(jTextField_promotionStartTime)
        								.addComponent(jTextField_promotionEndTime))
        							.addGap(120)
        							.addComponent(jLabel_promotionDiscountRate, GroupLayout.PREFERRED_SIZE, 178, GroupLayout.PREFERRED_SIZE)
        							.addGap(18)
        							.addComponent(jTextField_promotionDiscountRate, GroupLayout.PREFERRED_SIZE, 78, GroupLayout.PREFERRED_SIZE))
        						.addComponent(jComboBox_promotionPromoList, 0, 596, Short.MAX_VALUE)
        						.addGroup(gl_jPanel_promotionInfo.createSequentialGroup()
        							.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.TRAILING)
        								.addComponent(jButton_promotionModifier)
        								.addGroup(gl_jPanel_promotionInfo.createSequentialGroup()
        									.addComponent(jTextField_promotionID, GroupLayout.PREFERRED_SIZE, 146, GroupLayout.PREFERRED_SIZE)
        									.addPreferredGap(ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
        									.addComponent(jLabel_promotionName, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)))
        							.addGap(18)
        							.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.LEADING)
        								.addComponent(jButton_promotionAjouter)
        								.addComponent(jTextField_promotionName, GroupLayout.PREFERRED_SIZE, 339, GroupLayout.PREFERRED_SIZE))))
        					.addPreferredGap(ComponentPlacement.RELATED)))
        			.addContainerGap(21, Short.MAX_VALUE))
        );
        gl_jPanel_promotionInfo.setVerticalGroup(
        	gl_jPanel_promotionInfo.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_jPanel_promotionInfo.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jComboBox_promotionPromoList, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_promotionRecherche))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(jButton_promotionEffacer)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel_promotionName)
        				.addComponent(jTextField_promotionID, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jTextField_promotionName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_promotionID))
        			.addGap(12)
        			.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel_promotionDate)
        				.addComponent(jLabel_promotionHeure))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jTextField_promotionStartTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jTextField_promotionStartDate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_promotionDebut)
        				.addComponent(jTextField_promotionDiscountRate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_promotionDiscountRate))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jTextField_promotionEndTime, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jTextField_promotionEndDate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_promotionFin))
        			.addGap(18)
        			.addGroup(gl_jPanel_promotionInfo.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jButton_promotionModifier)
        				.addComponent(jButton_promotionAjouter))
        			.addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel_promotionInfo.setLayout(gl_jPanel_promotionInfo);
        jPanel_promotions.setLayout(gl_jPanel_promotions);
        GroupLayout gl_jPanel_createUpdateCat = new GroupLayout(jPanel_createUpdateCat);
        gl_jPanel_createUpdateCat.setHorizontalGroup(
        	gl_jPanel_createUpdateCat.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_jPanel_createUpdateCat.createSequentialGroup()
        			.addGap(9)
        			.addGroup(gl_jPanel_createUpdateCat.createParallelGroup(Alignment.TRAILING)
        				.addComponent(jLabel_catSubcatRecherche, GroupLayout.PREFERRED_SIZE, 56, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jlabel_catSubcatCatID, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE))
        			.addGap(18)
        			.addGroup(gl_jPanel_createUpdateCat.createParallelGroup(Alignment.LEADING)
        				.addGroup(gl_jPanel_createUpdateCat.createSequentialGroup()
        					.addComponent(jTextField_catSubcatCatID, GroupLayout.PREFERRED_SIZE, 169, GroupLayout.PREFERRED_SIZE)
        					.addGap(21)
        					.addComponent(jLabel_catSubcatCatName, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(jTextField_catSubcatCatName, GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE))
        				.addGroup(gl_jPanel_createUpdateCat.createSequentialGroup()
        					.addGap(158)
        					.addComponent(jButton_catSubcatModifierCat, GroupLayout.PREFERRED_SIZE, 78, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(jButton_catSubcatAjouterCat, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE))
        				.addGroup(gl_jPanel_createUpdateCat.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(jComboBox_catSubcatCatList, 0, 620, Short.MAX_VALUE))
        				.addComponent(jButton_catSubcatEffacerCat, Alignment.TRAILING, GroupLayout.PREFERRED_SIZE, 77, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap())
        );
        gl_jPanel_createUpdateCat.setVerticalGroup(
        	gl_jPanel_createUpdateCat.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_jPanel_createUpdateCat.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_jPanel_createUpdateCat.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jComboBox_catSubcatCatList, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_catSubcatRecherche))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(jButton_catSubcatEffacerCat)
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_createUpdateCat.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jTextField_catSubcatCatID, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jlabel_catSubcatCatID)
        				.addComponent(jTextField_catSubcatCatName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_catSubcatCatName))
        			.addGap(20)
        			.addGroup(gl_jPanel_createUpdateCat.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jButton_catSubcatAjouterCat)
        				.addComponent(jButton_catSubcatModifierCat))
        			.addContainerGap(56, Short.MAX_VALUE))
        );
        jPanel_createUpdateCat.setLayout(gl_jPanel_createUpdateCat);
        jPanel_catSubCat.setLayout(jPanel_catSubCatLayout);

        jTabbedPane_fonctions.addTab("Catégories/Sous-catégorires", jPanel_catSubCat);
        
        JPanel jPanel_customerCreationDate = new JPanel();
        jPanel_customerCreationDate.setBorder(new TitledBorder(null, "Informations Clients", TitledBorder.LEADING, TitledBorder.TOP, null, null));

        javax.swing.GroupLayout jPanel_clientsLayout = new javax.swing.GroupLayout(jPanel_clients);
        jPanel_clientsLayout.setHorizontalGroup(
        	jPanel_clientsLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel_clientsLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jPanel_customerCreationDate, GroupLayout.PREFERRED_SIZE, 725, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel_clientsLayout.setVerticalGroup(
        	jPanel_clientsLayout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel_clientsLayout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jPanel_customerCreationDate, GroupLayout.DEFAULT_SIZE, 678, Short.MAX_VALUE)
        			.addContainerGap())
        );
        
        JLabel jLabel_customerID = new JLabel("ID");
        jLabel_customerID.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_customerID = new JTextField();
        jTextField_customerID.setEditable(false);
        jTextField_customerID.setColumns(10);
        
        jTextField_customerEmail = new JTextField();
        jTextField_customerEmail.setColumns(10);
        
        jLabel_customerEmail = new JLabel("Email");
        jLabel_customerEmail.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_customerLastname = new JTextField();
        jTextField_customerLastname.setColumns(10);
        
        jLabel_customerLastname = new JLabel("Nom");
        jLabel_customerLastname.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jLabel_Firstname = new JLabel("Pr\u00E9nom");
        jLabel_Firstname.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_customerFirstname = new JTextField();
        jTextField_customerFirstname.setColumns(10);
        
        jTextField_customerPassword = new JTextField();
        jTextField_customerPassword.setEditable(false);
        jTextField_customerPassword.setColumns(10);
        
        jLabel_customerPassword = new JLabel("Mot de Passe");
        jLabel_customerPassword.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_customerBirthday = new JTextField();
        jTextField_customerBirthday.setColumns(10);
        
        jLabel_customerBirthday = new JLabel("Anniversaire");
        jLabel_customerBirthday.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jLabel_customerCreationDate = new JLabel("Date de Cr\u00E9ation du Compte");
        jLabel_customerCreationDate.setHorizontalAlignment(SwingConstants.RIGHT);
        
        jTextField_customerCreationDate = new JTextField();
        jTextField_customerCreationDate.setEditable(false);
        jTextField_customerCreationDate.setColumns(10);
        
        scrollPane = new JScrollPane();
        
        jButton_customerSupprimer = new JButton("Supprimer");
        jButton_customerSupprimer.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_customerSupprimerActionPerformed(e);
        	}
        });
        jButton_customerSupprimer.setEnabled(false);
        
        jButton_customerModifier = new JButton("Modifier");
        jButton_customerModifier.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		jButton_customerModifierActionPerformed(e);
        	}
        });
        jButton_customerModifier.setEnabled(false);
        GroupLayout gl_jPanel_customerCreationDate = new GroupLayout(jPanel_customerCreationDate);
        gl_jPanel_customerCreationDate.setHorizontalGroup(
        	gl_jPanel_customerCreationDate.createParallelGroup(Alignment.TRAILING)
        		.addGroup(gl_jPanel_customerCreationDate.createSequentialGroup()
        			.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.TRAILING)
        				.addGroup(Alignment.LEADING, gl_jPanel_customerCreationDate.createSequentialGroup()
        					.addContainerGap()
        					.addComponent(scrollPane, GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE))
        				.addGroup(Alignment.LEADING, gl_jPanel_customerCreationDate.createSequentialGroup()
        					.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.TRAILING)
        						.addGroup(gl_jPanel_customerCreationDate.createSequentialGroup()
        							.addContainerGap()
        							.addComponent(jLabel_customerPassword, GroupLayout.PREFERRED_SIZE, 71, GroupLayout.PREFERRED_SIZE))
        						.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.LEADING)
        							.addGroup(gl_jPanel_customerCreationDate.createSequentialGroup()
        								.addGap(36)
        								.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.TRAILING)
        									.addComponent(jLabel_customerID, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)
        									.addComponent(jLabel_customerLastname, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)))
        							.addGroup(gl_jPanel_customerCreationDate.createSequentialGroup()
        								.addContainerGap()
        								.addComponent(jLabel_customerBirthday, GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))))
        					.addGap(18)
        					.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.LEADING)
        						.addGroup(gl_jPanel_customerCreationDate.createSequentialGroup()
        							.addComponent(jTextField_customerBirthday, GroupLayout.PREFERRED_SIZE, 158, GroupLayout.PREFERRED_SIZE)
        							.addGap(33)
        							.addComponent(jLabel_customerCreationDate, GroupLayout.PREFERRED_SIZE, 164, GroupLayout.PREFERRED_SIZE)
        							.addGap(18)
        							.addComponent(jTextField_customerCreationDate, GroupLayout.DEFAULT_SIZE, 231, Short.MAX_VALUE))
        						.addComponent(jTextField_customerPassword, GroupLayout.DEFAULT_SIZE, 604, Short.MAX_VALUE)
        						.addGroup(gl_jPanel_customerCreationDate.createSequentialGroup()
        							.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.LEADING, false)
        								.addComponent(jTextField_customerLastname)
        								.addComponent(jTextField_customerID, GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE))
        							.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.LEADING)
        								.addGroup(gl_jPanel_customerCreationDate.createSequentialGroup()
        									.addGap(9)
        									.addComponent(jLabel_customerEmail, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE))
        								.addGroup(gl_jPanel_customerCreationDate.createSequentialGroup()
        									.addPreferredGap(ComponentPlacement.UNRELATED)
        									.addComponent(jLabel_Firstname, GroupLayout.PREFERRED_SIZE, 45, GroupLayout.PREFERRED_SIZE)))
        							.addGap(18)
        							.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.LEADING)
        								.addComponent(jTextField_customerFirstname, GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)
        								.addComponent(jTextField_customerEmail, GroupLayout.DEFAULT_SIZE, 326, Short.MAX_VALUE)))))
        				.addGroup(Alignment.LEADING, gl_jPanel_customerCreationDate.createSequentialGroup()
        					.addGap(267)
        					.addComponent(jButton_customerModifier)
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(jButton_customerSupprimer)))
        			.addContainerGap())
        );
        gl_jPanel_customerCreationDate.setVerticalGroup(
        	gl_jPanel_customerCreationDate.createParallelGroup(Alignment.LEADING)
        		.addGroup(gl_jPanel_customerCreationDate.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jTextField_customerID, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_customerID)
        				.addComponent(jTextField_customerEmail, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_customerEmail))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jLabel_customerLastname)
        				.addComponent(jLabel_Firstname)
        				.addComponent(jTextField_customerFirstname, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jTextField_customerLastname, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jTextField_customerPassword, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_customerPassword))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jTextField_customerBirthday, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_customerBirthday)
        				.addComponent(jTextField_customerCreationDate, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel_customerCreationDate))
        			.addGap(18)
        			.addGroup(gl_jPanel_customerCreationDate.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jButton_customerSupprimer)
        				.addComponent(jButton_customerModifier))
        			.addGap(21)
        			.addComponent(scrollPane, GroupLayout.PREFERRED_SIZE, 479, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(23, Short.MAX_VALUE))
        );
        
        
        
        jPanel_customerCreationDate.setLayout(gl_jPanel_customerCreationDate);
        jPanel_clients.setLayout(jPanel_clientsLayout);
        
        String[] customerColumnName = {"ID", "Nom", "Prénom", "Email", "Anniversaire"};
        Object[][] customerData = {};
        
        
        modelJTable_customer = new DefaultTableModel(customerData, customerColumnName) {
        	@Override 
        	public boolean isCellEditable(int row, int column) {
        		return false;
        	}
        };
        
        for(Customer customer : Customer.buffer) {
        	Object[] o = {customer.getID(), customer.getLastname(), customer.getFirstname(), 
        			customer.getEmail(), customer.getBirthday()};
        	modelJTable_customer.addRow(o);
        }
       
        jTable_customer = new JTable();
        jTable_customer.setModel(modelJTable_customer);
        
        TableColumn customerColumn = null;
        for(int i = 0; i < customerColumnName.length; i++) {
        	column = jTable_customer.getColumnModel().getColumn(i);
        	if (i==0 || i==4) {
        		column.setPreferredWidth(20);
        	}
        	else if (i==3) {
        		column.setPreferredWidth(150);
        	}
        }
        
        jTable_customer.getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        
        jTable_customer.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
        	public void valueChanged(ListSelectionEvent e) {
        		jTable_customerValueChanged(e);
        	}
        });
        
        scrollPane.setViewportView(jTable_customer);
        
        
        
        

        jTabbedPane_fonctions.addTab("Clients", jPanel_clients);

        jMenu_fichier.setText("Fichier");
        jMenu_fichier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_fichierActionPerformed(evt);
            }
        });

        jMenuItem_produits.setText("Gestion Produits");
        jMenuItem_produits.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_produitsActionPerformed(evt);
            }
        });
        jMenu_fichier.add(jMenuItem_produits);

        jMenuItem_categories.setText("Gestion Catégories");
        jMenuItem_categories.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_categoriesActionPerformed(evt);
            }
        });
        jMenu_fichier.add(jMenuItem_categories);

        jMenuItem_clients.setText("Gestion Clients");
        jMenuItem_clients.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_clientsActionPerformed(evt);
            }
        });
        jMenu_fichier.add(jMenuItem_clients);
        jMenu_fichier.add(jSeparator1);

        jMenuItem_quitter.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        jMenuItem_quitter.setText("Quitter");
        jMenuItem_quitter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_quitterActionPerformed(evt);
            }
        });
        jMenu_fichier.add(jMenuItem_quitter);

        jMenuBar1.add(jMenu_fichier);

        jMenu_about.setText("A propos");
        jMenu_about.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu_aboutActionPerformed(evt);
            }
        });

        jMenuItem_version.setText("Version");
        jMenuItem_version.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem_versionActionPerformed(evt);
            }
        });
        jMenu_about.add(jMenuItem_version);

        jMenuBar1.add(jMenu_about);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        layout.setHorizontalGroup(
        	layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(Alignment.LEADING, layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jTabbedPane_fonctions, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
        	layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(layout.createSequentialGroup()
        			.addContainerGap()
        			.addComponent(jTabbedPane_fonctions, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        getContentPane().setLayout(layout);

        setBounds(0, 0, 745, 628);
    }// </editor-fold>//GEN-END:initComponents
    
    
    
   
    
    
    
    
    
    
    
    
    private void jButton_customerModifierActionPerformed(java.awt.event.ActionEvent evt) {
    	Customer customer = Customer.getCustomerByID(Integer.valueOf(jTextField_customerID.getText()));
    	String msg="";
    	
    	try {
    		String birthdayS = jTextField_customerBirthday.getText().replace("/", "-");
    				
    		Date birthday = Date.valueOf(birthdayS);
    		
    		customer.setLastname(jTextField_customerLastname.getText());
    		customer.setFirstname(jTextField_customerFirstname.getText());
    		customer.setEmail(jTextField_customerEmail.getText());
    		customer.setBirthday(birthday);
    		
    		if (myDataBase.updateCustomer(customer) > 0) {
	    		msg = "Le compte client a bien été mise à jour";
	    		
	    		updateJTableCustomer(customer);
	    		jButton_customerSupprimer.setEnabled(false);
		    	jButton_customerModifier.setEnabled(false);
	    	} else {
	    		msg = "Erreur lors de la modification du compte client";
	    	}
	    	JOptionPane.showMessageDialog(this, msg);
	    	
	    	
   
    	}
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(this, "Veuillez saisir des informations correctes");
    	}
    	
    }
    
    
    private void jButton_customerSupprimerActionPerformed(java.awt.event.ActionEvent evt) {
    	try {
    		Customer customer = Customer.getCustomerByID(Integer.valueOf(jTextField_customerID.getText()));
    		int updatedRow = myDataBase.deleteCustomer(customer);
    		String msg = "";
    		
    		if(updatedRow > 0) {
    			jTextField_customerID.setText("");
	    		jTextField_customerLastname.setText("");
	    		jTextField_customerFirstname.setText("");
	    		jTextField_customerEmail.setText("");
	    		jTextField_customerPassword.setText("");
	    		jTextField_customerBirthday.setText("");
	    		jTextField_customerCreationDate.setText("");
	    		
	    		jButton_customerSupprimer.setEnabled(false);
	    		jButton_customerModifier.setEnabled(false);
	    		
	    		modelJTable_customer.removeRow(jTable_customer.getSelectedRow());
	    		
	    		Customer.deleteCustomer(customer);
	    		msg = "Le compte client a bien été supprimé";
    		}
    		else {
    			msg = "Erreur lors de la suppression du compte client";
    		}
    		JOptionPane.showMessageDialog(this, msg);
    	}
    	catch (Exception e) {
    		System.out.println(e);
    	}
    }
    
    
    private void jTable_customerValueChanged(ListSelectionEvent evt) {
    	int row = jTable_customer.getSelectedRow();
    	int ID = -1;
    	
    	if(row > -1) {
    		try {
	    		ID = Integer.valueOf(modelJTable_customer.getValueAt(row, 0).toString());
	    		Customer customer = Customer.getCustomerByID(ID);
	    		
	    		jTextField_customerID.setText(Integer.toString(customer.getID()));
	    		jTextField_customerLastname.setText(customer.getLastname());
	    		jTextField_customerFirstname.setText(customer.getFirstname());
	    		jTextField_customerEmail.setText(customer.getEmail());
	    		jTextField_customerPassword.setText(customer.getPassword());
	    		jTextField_customerBirthday.setText(customer.getBirthday().toString());
	    		jTextField_customerCreationDate.setText(customer.getAccountCreationDate().toString());
	    		
	    		jButton_customerSupprimer.setEnabled(true);
	    		jButton_customerModifier.setEnabled(true);
    		} 
    		catch(Exception e) {
    			System.out.println(e);
    		}
    	}
    }
    
    
    private void updateJTableCustomer(Customer customer) {
    	int row = jTable_customer.getSelectedRow();
    	Object[] o = {customer.getID(), customer.getLastname(), customer.getFirstname(), 
    			customer.getEmail(), customer.getBirthday()};
    	
    	modelJTable_customer.removeRow(row);
    	modelJTable_customer.insertRow(row, o);
    }
    
    
    
    
    
    
    
    private void jButton_promotionProductAjouterActionPerformed(java.awt.event.ActionEvent evt) {
    	try {
    		Product product = (Product) jComboBox_promotionResult.getSelectedItem();
    		Promotion promotion = (Promotion) jComboBox_promotionPromoList.getSelectedItem();
    		DecimalFormat df = new DecimalFormat("0.00");
    		String subcatName;
    		int start, end, row;
    		
    		if(product != null) {
    			if(product.getID() == -1) {
    				start = 1;
    				end = modelPromotionSearchResult.getSize();
    			}
    			else {
    				start = jComboBox_promotionResult.getSelectedIndex();
    				end = start + 1;
    			}
    			
	    		for(int i=start; i < end; i++) {
	    			product = (Product) jComboBox_promotionResult.getItemAt(i);
	    			
	    			try {
	    				row = myDataBase.insertPromotedProduct(promotion, product);
	    				
	    				if(row > 0) {
	    					if(product.getSubcat() != null) {
	    	    				subcatName = product.getSubcat().getName();
	    	    			} 
	    	    			else {
	    	    				subcatName = "";
	    	    			}
	    	    			
	    	    			Object[] o = {product.getID(), product.getCat().getName(), subcatName, product.getName(), 
	    	    					product.getPrice(), df.format((product.getPrice()*(100 - promotion.getDiscountRate()))/100).replace(",", ".")};
	    	    			modelJTable_promotionPromotedProducts.addRow(o);
	    				}
	    			} catch (Exception e) {}
	    		}
    		}
    		
    	} catch (Exception e) {
    		System.out.println(e);
    	}
    }
    
    
    private void jButton_promotionRechercherActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try{
            String label_search = jTextField_promotionProductName.getText();
            Category cat = (Category) jComboBox_promotionCat.getSelectedItem();
            Subcategory subcat = (Subcategory) jComboBox_promotionSubcat.getSelectedItem();
            System.out.println(label_search + " " + cat + " " + subcat);
            Product.overwriteBuffer(myDataBase.getProduct(label_search, cat, subcat));
            
            if(Product.buffer.size() > 0) {
	            ArrayList<Product> products = new ArrayList<Product>();
	            if(Product.buffer.size() > 1) {
	            	products.add(new Product(-1, null, null, "Ajouter tout les produits recherchés", 0, null, 0, 0, null));
	            }
	            products.addAll(Product.buffer);
	            
	            modelPromotionSearchResult = new DefaultComboBoxModel(products.toArray());
	            jComboBox_promotionResult.setModel(modelPromotionSearchResult);
	            jButton_promotionProductAjouter.setEnabled(true);
            }
            
        } catch(Exception e){ JOptionPane.showMessageDialog(this, "Les informations saisies sont incorrectes");}

    }
    
    private void jComboBox_promotionCatActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try{
            Category cat = (Category) jComboBox_promotionCat.getSelectedItem();
            ArrayList<Subcategory> subCat = new ArrayList<Subcategory>();
            subCat.add(null);
            subCat.addAll(Subcategory.getSubcategoryByCat(cat));
            modelPromotionSubcat = new DefaultComboBoxModel(subCat.toArray());
            jComboBox_promotionSubcat.setModel(modelPromotionSubcat);
        } 
        catch(Exception e) { System.out.println(e); }
    }
    
    
    private void jTable_promotionPromotedProductsValueChanged(ListSelectionEvent evt) {
    	//TODO
    	if(jTable_promotionPromotedProducts.getSelectedRow() != -1) {
    		jButton_promotionProductSupprimer.setEnabled(true);
    	}
    	else {
    		jButton_promotionProductSupprimer.setEnabled(false);
    	}
    }
    
    private void jButton_promotionProductSupprimerActionPerformed(java.awt.event.ActionEvent evt) {
    	//TODO
    	int index = jTable_promotionPromotedProducts.getSelectedRow();
    	if(index != -1) {
    		try {
    			Promotion promo = (Promotion) jComboBox_promotionPromoList.getSelectedItem();
    			int productID = (int) ((Vector)modelJTable_promotionPromotedProducts.getDataVector().elementAt(index)).elementAt(0);
    			
    			int i = myDataBase.deletePromotedProduct(promo, productID);
    			
    			clearJTablePromotion();
    		}
    		catch (Exception e) {
    			JOptionPane.showMessageDialog(this, "Erreur lors de la suppression");
    		}
    		
    	}
    }
    
    private void setEnabledPromotedProduct(boolean bool) {
    	jTextField_promotionProductName.setEnabled(bool);
    	
    	jComboBox_promotionCat.setEnabled(bool);
    	jComboBox_promotionSubcat.setEnabled(bool);
    	jComboBox_promotionResult.setEnabled(bool);
    	
    	jButton_promotionProductEffacer.setEnabled(bool);
    	jButton_promotionProductRechercher.setEnabled(bool);
    }
    
    
    
    
    
    
    
    
    
    private void jButton_promotionModiferActionPerformed(java.awt.event.ActionEvent evt) {
    	//TODO
    	Promotion promotion = (Promotion) jComboBox_promotionPromoList.getSelectedItem();
    	String msg="";
    	
    	try {
    		String startS = jTextField_promotionStartDate.getText().replace("/", "-") + " "
    				+ jTextField_promotionStartTime.getText();
    		String endS = jTextField_promotionEndDate.getText().replace("/", "-") + " "
    				+ jTextField_promotionEndTime.getText();
    				
    		Timestamp start = Timestamp.valueOf(startS);
    		Timestamp end = Timestamp.valueOf(endS);
    		
    		promotion.setStart(start);
    		promotion.setEnd(end);
    		promotion.setName(jTextField_promotionName.getText());
    		promotion.setDiscountRate(Integer.valueOf(jTextField_promotionDiscountRate.getText()));
    		
    		if (myDataBase.updatePromotion(promotion) > 0) {
	    		msg = "La promotion a bien été mise à jour";
	    		
	    		updateJTablePromotion(promotion);
	    		jButton_promotionAjouter.setEnabled(false);
		    	jButton_promotionModifier.setEnabled(true);
	    	} else {
	    		msg = "Erreur lors de la modification de la promotion";
	    	}
	    	JOptionPane.showMessageDialog(this, msg);
	    	
	    	
   
    	}
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(this, "Veuillez saisir des informations correctes");
    	}
    	
    }
    
    private void jComboBox_promotionPromoListActionPerformed(java.awt.event.ActionEvent evt) {
    	Promotion promo = null;
    	
    	try {
    		promo = (Promotion) jComboBox_promotionPromoList.getSelectedItem();
    		
    		if(promo == null) {
        		jButton_promotionEffacerActionPerformed(evt);
        	}
    		else {
	    		String[] start = promo.getStart().toString().split(" ");
	    		String[] end = promo.getEnd().toString().split(" ");
	    		String[][] time = new String[2][3];
	    		
	    		time[0] = start[1].split(":");
	    		time[1] = end[1].split(":");
	    		
	    		start[1] = time[0][0] + ":" + time[0][1];
	    		end[1] = time[1][0] + ":" + time[1][1];
	    		
	    		
	    				
		    	jTextField_promotionID.setText(Integer.toString(promo.getID()));
		    	jTextField_promotionName.setText(promo.getName());
		    	jTextField_promotionStartDate.setText(start[0]);
		    	jTextField_promotionStartTime.setText(start[1]);
		    	jTextField_promotionEndDate.setText(end[0]);
		    	jTextField_promotionEndTime.setText(end[1]);
		    	jTextField_promotionDiscountRate.setText(Integer.toString(promo.getDiscountRate()));
		    	
		    	jButton_promotionModifier.setEnabled(true);
		    	jButton_promotionAjouter.setEnabled(false);
		    	
		    	
		    	setEnabledPromotedProduct(true);
		    	updateJTablePromotion(promo);
    		}
    	} 
    	catch (Exception e) {
    		System.out.println(e);
    	}
    }
    
    
    private void jButton_promotionAjouterActionPerformed(java.awt.event.ActionEvent evt) {
    	//TODO
    	Promotion promotion;
    	Timestamp start, end;
    	String msg="", name, startS, endS;
    	
    	try {
    		startS = jTextField_promotionStartDate.getText().replace("/", "-") + " "
    				+ jTextField_promotionStartTime.getText();
    		endS = jTextField_promotionEndDate.getText().replace("/", "-") + " "
    				+ jTextField_promotionEndTime.getText();
    				
    		start = Timestamp.valueOf(startS);
    		end = Timestamp.valueOf(endS);
    		name = jTextField_promotionName.getText();
    		
    		promotion = new Promotion(
    				-1,
    				start,
    				end,
    				jTextField_promotionName.getText(),
    				Integer.valueOf(jTextField_promotionDiscountRate.getText())
    				);
    		
    	
    		if (myDataBase.insertRow("promotions", promotion) > 0) {
    			promotion = myDataBase.getPromotionByNameAndDate(name, start, end);
    			Promotion.buffer.add(promotion);
    			jTextField_promotionID.setText(Integer.toString(promotion.getID()));
	    		msg = "La nouvelle promotion a bien été ajouté";
	    		
	    		setEnabledPromotedProduct(true);
	    	} 
    		else {
	    		msg = "Erreur lors de l'ajout de la promotion";
	    	}
	    	JOptionPane.showMessageDialog(this, msg);
	    	
	    	jButton_promotionAjouter.setEnabled(false);
	    	jButton_promotionModifier.setEnabled(true);
   
    	}
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(this, "Veuillez saisir des informations correctes");
    	}
    }
    
    
    private void jButton_promotionEffacerActionPerformed(java.awt.event.ActionEvent evt) {
    	jTextField_promotionID.setText("");
    	jTextField_promotionName.setText("");
    	jTextField_promotionStartDate.setText("");
    	jTextField_promotionStartTime.setText("");
    	jTextField_promotionEndDate.setText("");
    	jTextField_promotionEndTime.setText("");
    	jTextField_promotionDiscountRate.setText("");
    	
    	clearJTablePromotion();
    	
    	jComboBox_promotionPromoList.setSelectedIndex(0);
    	
    	jButton_promotionModifier.setEnabled(false);
    	jButton_promotionAjouter.setEnabled(true);
    	
    	setEnabledPromotedProduct(false);
    }
    
    private void clearJTablePromotion() {
    	for(int i=0; i < modelJTable_promotionPromotedProducts.getRowCount(); i++) {
    		modelJTable_promotionPromotedProducts.removeRow(i);
    	}
    }
    
    
    private void updateJTablePromotion(Promotion promo) {
    	ArrayList<Product> promotedProduct = myDataBase.getProductByPromotion(promo);
    	DecimalFormat df = new DecimalFormat("0.00");
    	String subcat;
    	
    	clearJTablePromotion();
    	
    	for(Product product : promotedProduct) {
    		if(product.getSubcat() != null) {
    			subcat = product.getSubcat().getName();
    		}
    		else {
    			subcat = "";
    		}
    		
    		Object[] o = {product.getID(), product.getCat().getName(), subcat, 
    				product.getName(), product.getPrice(), 
    				df.format((product.getPrice() * (100 - promo.getDiscountRate()))/100)};
    		modelJTable_promotionPromotedProducts.addRow(o);
    	}
    }
    
    
    
    
    
    
    
    
    
    private void jComboBox_catSubcatSubcatListActionPerformed(java.awt.event.ActionEvent evt) {
    	Subcategory subcat = (Subcategory) jComboBox_catSubcatSubcatList.getSelectedItem();
    	
    	jTextField_catSubcatSubcatID.setText(Integer.toString(subcat.getID()));
    	jTextField_catSubcatSubcatName.setText(subcat.getName());
    	
    	jButton_catSubcatAjouterSubcat.setEnabled(false);
    	jButton_catSubcatModifierSubcat.setEnabled(true);
    	jComboBox_catSubcatSubcatCat.setEnabled(false);
    }
    
    
    private void jComboBox_catSubCatRechercheParCatActionPerformed(java.awt.event.ActionEvent evt) {
    	//TODO
    	Category cat1 = (Category) jComboBox_catSubCatRechercheParCat.getSelectedItem();
    	Category cat2 = (Category) jComboBox_catSubcatSubcatCat.getSelectedItem();
    	
    	if(cat1.getID() != cat2.getID()) {
    		jTextField_catSubcatSubcatID.setText("");
        	jTextField_catSubcatSubcatName.setText("");
        	jButton_catSubcatAjouterSubcat.setEnabled(true);
        	jButton_catSubcatModifierSubcat.setEnabled(false);
        	jComboBox_catSubcatSubcatCat.setEnabled(true);
        	
        	modeleCatSubcatSubcatList = new DefaultComboBoxModel(Subcategory.getSubcategoryByCat((Category) 
        			jComboBox_catSubCatRechercheParCat.getSelectedItem()).toArray());
        	
        	jComboBox_catSubcatSubcatList.setModel(modeleCatSubcatSubcatList);
        	
        	jComboBox_catSubcatSubcatCat.setSelectedItem(jComboBox_catSubCatRechercheParCat.getSelectedItem());
    	}
    }
    
    
    private void jButton_catSubcatModifierSubcatActionPerformed(java.awt.event.ActionEvent evt) {
    	//TODO
    	Subcategory subcat = (Subcategory) jComboBox_catSubcatSubcatList.getSelectedItem();
    	String msg="";
    	
    	try {
    		subcat.setName(jTextField_catSubcatSubcatName.getText());
    		
    		if (myDataBase.updateSubcategory(subcat) > 0) {
    			jButton_catSubcatAjouterSubcat.setEnabled(false);
    	    	jButton_catSubcatModifierSubcat.setEnabled(true);
	    		msg = "La sous-catégorie a bien été renommé";
	    	} else {
	    		msg = "Erreur lors de la modification de la sous-catégorie";
	    	}
	    	JOptionPane.showMessageDialog(this, msg); 	
   
    	}
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(this, "Veuillez saisir des informations correctes");
    	}
    	
    }
    
    
    private void jButton_catSubcatAjouterSubcatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_catSubcatAjouterSubcatActionPerformed
    	//TODO
    	Category cat;
    	Subcategory subcat;
    	String msg="", name;
    	
    	try {
    		name = jTextField_catSubcatSubcatName.getText();
    		if(name != null && !name.equals("")) {
	    		cat = (Category) jComboBox_catSubcatSubcatCat.getSelectedItem();
	    		subcat = new Subcategory(-1, cat, name);
	    		
	    		if (myDataBase.insertRow("subcategories", subcat) > 0) {
	    			subcat = myDataBase.getSubcategoryByNameAndCat(name, cat);
	    			Subcategory.buffer.add(subcat);
	    			jTextField_catSubcatSubcatID.setText(Integer.toString(subcat.getID()));
		    		msg = "La sous-catégorie a bien été ajouté";
		    		jButton_catSubcatAjouterSubcat.setEnabled(false);
			    	jButton_catSubcatModifierSubcat.setEnabled(true);
		    	} else {
		    		msg = "Erreur lors de l'ajout de la sous-catégorie";
		    	}
		    	JOptionPane.showMessageDialog(this, msg);
    		}
    		else {
    			throw new IllegalArgumentException();
    		}
    	}
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(this, "Veuillez saisir des informations correctes");
    	}
    }//GEN-LAST:event_jButton_catSubcatAjouterSubcatActionPerformed
    
    
    private void jButton_catSubcatEffacerSubcatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_catSubcatEffacerSubcatActionPerformed
    	jComboBox_catSubCatRechercheParCat.setSelectedIndex(0);
    	jTextField_catSubcatSubcatID.setText("");
    	jTextField_catSubcatSubcatName.setText("");
    	
    	jButton_catSubcatModifierSubcat.setEnabled(false);
    	jButton_catSubcatAjouterSubcat.setEnabled(true);
    	jComboBox_catSubcatSubcatCat.setEnabled(true);
    } //GEN-LAST:event_jButton_catSubcatEffacerSubcatActionPerformed
    
    
    
    
    
    
    
    
    
    
    private void jButton_catSubcatEffacerCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_catSubcatEffacerCatActionPerformed
    	jComboBox_catSubcatCatList.setSelectedIndex(0);
    	jTextField_catSubcatCatID.setText("");
    	jTextField_catSubcatCatName.setText("");
    	
    	jButton_catSubcatModifierSubcat.setEnabled(false);
    	jButton_catSubcatAjouterSubcat.setEnabled(true);
    } //GEN-LAST:event_jButton_catSubcatEffacerCatActionPerformed
   
    
    private void jButton_catSubcatAjouterCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_catSubcatAjouterCatActionPerformed
    	//TODO
    	Category cat;
    	String msg="", name;
    	
    	try {
    		name = jTextField_catSubcatCatName.getText();
    		if(name != null && !name.equals("")) {
	    		cat = new Category(-1, name);
	    		
	    		if (myDataBase.insertRow("categories", cat) > 0) {
	    			cat = myDataBase.getCategoryByName(name);
	    			Category.buffer.add(cat);
	    			jTextField_catSubcatCatID.setText(Integer.toString(cat.getID()));
		    		msg = "La catégorie a bien été ajouté";
	
			    	jButton_catSubcatAjouterCat.setEnabled(false);
			    	jButton_catSubcatModifierCat.setEnabled(true);
		    	} else {
		    		msg = "Erreur lors de l'ajout de la catégorie";
		    	}
		    	JOptionPane.showMessageDialog(this, msg);
    		}
    		else {
    			throw new IllegalArgumentException();
    		}
   
    	}
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(this, "Veuillez saisir des informations correctes");
    	}
    }//GEN-LAST:event_jButton_catSubcatAjouterCatActionPerformed
    
    
    private void jButton_catSubcatModifierCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_catSubcatModifierCatActionPerformed
    	//TODO
    	Category cat = (Category) jComboBox_catSubcatCatList.getSelectedItem();
    	String msg="";
    	
    	try {
    		cat.setName(jTextField_catSubcatCatName.getText());
    		
    		if (myDataBase.updateCategory(cat) > 0) {
	    		msg = "La catégorie a bien été renommé";
	    		jButton_catSubcatAjouterCat.setEnabled(false);
		    	jButton_catSubcatModifierCat.setEnabled(true);
	    	} else {
	    		msg = "Erreur lors de la modification de la catégorie";
	    	}
	    	JOptionPane.showMessageDialog(this, msg);
   
    	}
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(this, "Veuillez saisir des informations correctes");
    	}
    	
    }//GEN-LAST:event_jButton_catSubcatModifierCatActionPerformed
    
    
    private void jComboBox_catListCatListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_catListCatListActionPerformed
    	//TODO
    	try {
    		Category cat = (Category) jComboBox_catSubcatCatList.getSelectedItem();
    		if(cat != null && cat.getID() > 0) {
	    		jTextField_catSubcatCatID.setText(Integer.toString(cat.getID()));
	    		jTextField_catSubcatCatName.setText(cat.getName());
	    		
	    		jButton_catSubcatModifierCat.setEnabled(true);
	    		jButton_catSubcatAjouterCat.setEnabled(false);
    		}
    		
    	} catch (Exception e) { System.out.println(e);}
    }//GEN-LAST:event_jComboBox_catListCatListActionPerformed

    
   
    
    
    
    
    
    
    
    private void jTextField_labelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_labelActionPerformed
        //add your handling code here:
    }//GEN-LAST:event_jTextField_labelActionPerformed
    
    
    
    
    
    
    
    
    
    
    
    private void jButton_addStockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_addStockActionPerformed
        // TODO add your handling code here:
    	try {
    		int newValue = Integer.valueOf(jTextField_addStockValue.getText()) + Integer.valueOf(jTextField_stock.getText());
    		jTextField_addStockValue.setText("");
    		
    		if (newValue >= 0) {
    			jTextField_stock.setText(Integer.toString(newValue));
    		}
    		else {
    			throw new IllegalArgumentException("La valeur du stock ne peut pas être négative");
    		}
    	}
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(this, "Veuillez entrer une valeur correcte");
    	}
    	
    }//GEN-LAST:event_jButton_addStockActionPerformed


    private void jButton_ajouterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_ajouterActionPerformed
        // TODO add your handling code here:
    	
    	try {
	        Product pdt = new Product(
	        		(Category) jComboBox_resultListCat.getSelectedItem(),
	        		(Subcategory) jComboBox_resultListSubCat.getSelectedItem(), 
	        		jTextField_resultLabel.getText(),
	        		Double.valueOf(jTextField_price.getText().replace(",", ".")), 
	        		jTextArea_description.getText(), 
	        		Integer.valueOf(jTextField_alertThreshold.getText()), 
	        		Integer.valueOf(jTextField_stock.getText()), 
	        		null); // TODO : reduction
	        
	        if(myDataBase.insertRow("products", pdt) > 0) {       
	            
	            JOptionPane.showMessageDialog(this, "Produit ajouté avec succès");
	        }
	        else {
	        	JOptionPane.showMessageDialog(this, "Erreur lors de l'ajout du produit"); 	
	        }
	        
	        jButton_ajouter.setEnabled(true);
	        jButton_modifier.setEnabled(false);
    	} 
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(this, "Veuillez remplir des informations correctes");
    	}
	       
        
    }//GEN-LAST:event_jButton_ajouterActionPerformed
    
    
    private void jComboBox_ListCatActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        try{
            Category cat = (Category) jComboBox_ListCat.getSelectedItem();
            ArrayList<Subcategory> subCat = new ArrayList<Subcategory>();
            subCat.add(null);
            subCat.addAll(Subcategory.getSubcategoryByCat(cat));
            modeleDesSousCategories_search = new DefaultComboBoxModel(subCat.toArray());
            jComboBox_ListSubCat.setModel(modeleDesSousCategories_search);
        } 
        catch(Exception e){ System.out.println(e); }
    }

    
    private void jComboBox_ListCatItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_ListCatItemStateChanged
        // add your handling code here:
    }//GEN-LAST:event_jComboBox_ListCatItemStateChanged

    
    private void jButton_rechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_rechercherActionPerformed
        // TODO add your handling code here:
        try{
            String label_search = jTextField_label.getText();
            Category cat = (Category) jComboBox_ListCat.getSelectedItem();
            Subcategory subcat = (Subcategory) jComboBox_ListSubCat.getSelectedItem();
            Product.overwriteBuffer(myDataBase.getProduct(label_search, cat, subcat));
            
            modelProductSearchResult = new DefaultComboBoxModel(Product.buffer.toArray());
            jComboBox_SearchResult.setModel(modelProductSearchResult);
            
        } catch(Exception e){ JOptionPane.showMessageDialog(this, "Les informations saisies sont incorrectes");}

    }//GEN-LAST:event_jButton_rechercherActionPerformed

    
    private void jComboBox_resultListCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_resultListCatActionPerformed
        // TODO add your handling code here:
        try{
            Category cat = (Category) jComboBox_resultListCat.getSelectedItem();
            ArrayList<Subcategory> subCat = new ArrayList<Subcategory>();
            subCat.add(null);
            subCat.addAll(Subcategory.getSubcategoryByCat(cat));
            modeleDesSousCategories_result = new DefaultComboBoxModel(subCat.toArray());
            jComboBox_resultListSubCat.setModel(modeleDesSousCategories_result);
        } catch(Exception e){
            
        }
    }//GEN-LAST:event_jComboBox_resultListCatActionPerformed
    
    
    private void jComboBox_SearchResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_SearchResultActionPerformed
    	try {
    		Product result = (Product) jComboBox_SearchResult.getSelectedItem();
    		int discountRate = 0;
    		DecimalFormat df = new DecimalFormat("0.00");
    		if(result.getPromotion() != null) {
            	discountRate = result.getPromotion().getDiscountRate();
            }
    		
    		jTextField_resultLabel.setText(result.getName());
            jTextField_resultId.setText(String.valueOf(result.getID()));
            jComboBox_resultListCat.setSelectedItem(result.getCat());
            jComboBox_resultListSubCat.setSelectedItem(result.getSubcat());
            jTextArea_description.setText(result.getDescription());
            jTextField_price.setText(Double.toString(result.getPrice()));
            jTextField_alertThreshold.setText(Integer.toString(result.getAlertThreshold()));
            jTextField_stock.setText(Integer.toString(result.getStock()));
            jTextField_discountRate.setText(Integer.toString(discountRate));
            jTextField_prixDeVente.setText(df.format((result.getPrice() * (100 - discountRate))/100));
           
            jButton_modifier.setEnabled(true);
            jButton_ajouter.setEnabled(false);
    	} catch (NullPointerException ex) { System.out.println(ex);}
    }//GEN-LAST:event_jComboBox_SearchResultActionPerformed

    
    private void jComboBox_ListSubCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_ListSubCatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox_ListSubCatActionPerformed

    
    private void jButton_effacerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_effacerActionPerformed
        // TODO add your handling code here:
        jTextField_label.setText("");
        jComboBox_ListCat.setSelectedIndex(0);
        jComboBox_resultListCat.setSelectedIndex(0);
        jTextField_resultLabel.setText("");
        jTextField_resultId.setText("");
        jComboBox_resultListCat.setSelectedItem("");
        jComboBox_resultListSubCat.setSelectedItem("");
        jTextArea_description.setText("");
        jTextField_price.setText("");
        jTextField_alertThreshold.setText("");
        jTextField_stock.setText("0");
        jTextField_discountRate.setText("0");
        jTextField_prixDeVente.setText("");
        jComboBox_SearchResult.removeAllItems();
        
        jButton_modifier.setEnabled(false);
        jButton_ajouter.setEnabled(true);
    }//GEN-LAST:event_jButton_effacerActionPerformed

    
    private void jMenu_fichierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_fichierActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jMenu_fichierActionPerformed

    
    private void jMenuItem_quitterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_quitterActionPerformed
        // TODO add your handling code here:
        int input = JOptionPane.showConfirmDialog(null, "Quitter l'application ?", "Confirmation", JOptionPane.YES_NO_OPTION);
        if(input == 0)
               System.exit(0);
    }//GEN-LAST:event_jMenuItem_quitterActionPerformed

    
    private void jMenuItem_produitsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_produitsActionPerformed
        // TODO add your handling code here:
        jTabbedPane_fonctions.setSelectedComponent(jPanel_produits);
    }//GEN-LAST:event_jMenuItem_produitsActionPerformed

    private void jMenuItem_categoriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_categoriesActionPerformed
        // TODO add your handling code here:
        jTabbedPane_fonctions.setSelectedComponent(jPanel_catSubCat);
    }//GEN-LAST:event_jMenuItem_categoriesActionPerformed

    private void jMenuItem_clientsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_clientsActionPerformed
        // TODO add your handling code here:
        jTabbedPane_fonctions.setSelectedComponent(jPanel_clients);
    }//GEN-LAST:event_jMenuItem_clientsActionPerformed

    
    private void jButton_modifierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_modifierActionPerformed
        // TODO faire remonter les erreus sql
    	try {
	    	Product product = Product.getProductByID(Integer.parseInt(jTextField_resultId.getText()));
	    	String msg;
	        
	    	product.setCat((Category) jComboBox_resultListCat.getSelectedItem()); 
	    	product.setSubcat((Subcategory) jComboBox_resultListSubCat.getSelectedItem());
	    	product.setName(jTextField_resultLabel.getText());
	    	product.setPrice(Double.valueOf(jTextField_price.getText()));
	    	product.setDescription(jTextArea_description.getText());
	    	product.setAlertThreshold(Integer.parseInt(jTextField_alertThreshold.getText()));
	    	product.setStock(Integer.valueOf(jTextField_stock.getText()));
	    	//System.out.println(product.testField());
	    	
	    	if (myDataBase.updateProduct(product) > 0) {
	    		msg = "Le produit a bien été modifié";
	    	} else {
	    		msg = "Erreur lors de la modification du produit";
	    	}
	    	JOptionPane.showMessageDialog(this, msg);
    	}
    	catch (Exception e) {
    		JOptionPane.showMessageDialog(this, e + "\nVeuillez saisir des informations correctes");
    	}
        
    }//GEN-LAST:event_jButton_modifierActionPerformed

    
    private void jMenu_aboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu_aboutActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu_aboutActionPerformed

    
    private void jMenuItem_versionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem_versionActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Auteur de l'application :"+"\nAnthony REICHEN & Alex DA SILVA");
    }//GEN-LAST:event_jMenuItem_versionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainWindow().setVisible(true);
            }
        });
    }


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_ajouter;
    private javax.swing.JButton jButton_effacer;
    private javax.swing.JButton jButton_modifier;
    private javax.swing.JButton jButton_rechercher;
    private javax.swing.JComboBox<String> jComboBox_ListCat;
    private javax.swing.JComboBox<String> jComboBox_ListSubCat;
    private javax.swing.JComboBox<String> jComboBox_resultListCat;
    private javax.swing.JComboBox<String> jComboBox_resultListSubCat;
    private javax.swing.JComboBox<String> jComboBox_SearchResult;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel_Categorie;
    private javax.swing.JLabel jLabel_SousCategorie;
    private javax.swing.JLabel jLabel_alertThreshold;
    private javax.swing.JLabel jLabel_description;
    private javax.swing.JLabel jLabel_libelle;
    private javax.swing.JLabel jLabel_messageConfirmation;
    private javax.swing.JLabel jLabel_price;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem_categories;
    private javax.swing.JMenuItem jMenuItem_clients;
    private javax.swing.JMenuItem jMenuItem_produits;
    private javax.swing.JMenuItem jMenuItem_quitter;
    private javax.swing.JMenuItem jMenuItem_version;
    private javax.swing.JMenu jMenu_about;
    private javax.swing.JMenu jMenu_fichier;
    private javax.swing.JPanel jPanel_catSubCat;
    private javax.swing.JPanel jPanel_clients;
    private javax.swing.JPanel jPanel_infosProduit;
    private javax.swing.JPanel jPanel_produitSelection;
    private javax.swing.JPanel jPanel_produits;
    private javax.swing.JPanel jPanel_rechercheProduit;
    private javax.swing.JScrollPane jScrollPane_description;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane_fonctions;
    private javax.swing.JTextArea jTextArea_description;
    private javax.swing.JTextField jTextField_alertThreshold;
    private javax.swing.JTextField jTextField_label;
    private javax.swing.JTextField jTextField_price;
    private javax.swing.JTextField jTextField_resultId;
    private javax.swing.JTextField jTextField_resultLabel;
    // End of variables declaration//GEN-END:variables
    
    private ComboBoxModel <String> modeleDesCategories_search;
    private ComboBoxModel <String> modeleDesCategories_result;
    private ComboBoxModel <String> modeleDesSousCategories_search  = new DefaultComboBoxModel(new ArrayList().toArray());
    private ComboBoxModel <String> modeleDesSousCategories_result  = new DefaultComboBoxModel(new ArrayList().toArray());
    private ComboBoxModel <String> modelProductSearchResult = new DefaultComboBoxModel(new ArrayList().toArray());
    private ComboBoxModel <String> modelCatSubcatCatList;
    private ComboBoxModel <String> modeleCatSubcatRechercheParCat;
    private ComboBoxModel <String> modeleCatSubcatSubcatList;
    private ComboBoxModel <String> modelCatSubcatSubcatCat;
    private ComboBoxModel <String> modelePromotionList;
    private ComboBoxModel <String> modelPromotionCat;
    private ComboBoxModel <String> modelPromotionSubcat;
    private ComboBoxModel <String> modelPromotionSearchResult;
    private MyDataBase myDataBase;
    private JTextField jTextField_stock;
    private JLabel lblNewLabel;
    private JTextField jTextField_addStockValue;
    private JLabel lblNewLabel_1;
    private JPanel jPanel_createUpdateCat;
    private JComboBox jComboBox_catSubcatCatList;
    private JLabel jLabel_catSubcatRecherche;
    private JLabel jlabel_catSubcatCatID;
    private JTextField jTextField_catSubcatCatID;
    private JLabel jLabel_catSubcatCatName;
    private JTextField jTextField_catSubcatCatName;
    private JButton jButton_catSubcatAjouterCat;
    private JButton jButton_catSubcatModifierCat;
    private JPanel jPanel_createUpdateSubcat;
    private JComboBox jComboBox_catSubCatRechercheParCat;
    private JLabel jLabel_catSubcatRechercheParCat;
    private JLabel jLabel_catSubcatRechercheSubcat;
    private JComboBox jComboBox_catSubcatSubcatList;
    private JLabel jLabel_catSubcatSubcatID;
    private JTextField jTextField_catSubcatSubcatID;
    private JLabel jLabel_catSubcatSubcatName;
    private JTextField jTextField_catSubcatSubcatName;
    private JButton jButton_catSubcatModifierSubcat;
    private JButton jButton_catSubcatAjouterSubcat;
    private JButton jButton_catSubcatEffacerCat;
    private JButton jButton_catSubcatEffacerSubcat;
    private JComboBox jComboBox_catSubcatSubcatCat;
    private JLabel jLabel_catSubcatCat;
    private JPanel jPanel_promotions;
    private JPanel jPanel_promotionInfo;
    private JLabel jLabel_promotionRecherche;
    private JComboBox jComboBox_promotionPromoList;
    private JButton jButton_promotionEffacer;
    private JTextField jTextField_promotionID;
    private JLabel jLabel_promotionID;
    private JLabel jLabel_promotionName;
    private JTextField jTextField_promotionName;
    private JLabel jLabel_promotionDate;
    private JTextField jTextField_promotionEndDate;
    private JTextField jTextField_promotionStartDate;
    private JLabel jLabel_promotionDebut;
    private JLabel jLabel_promotionFin;
    private JTextField jTextField_promotionStartTime;
    private JTextField jTextField_promotionEndTime;
    private JLabel jLabel_promotionHeure;
    private JTextField jTextField_promotionDiscountRate;
    private JLabel jLabel_promotionDiscountRate;
    private JButton jButton_promotionModifier;
    private JButton jButton_promotionAjouter;
    private JPanel jPanel_promotedProduct;
    private JScrollPane jScrollPane_promotionPromotedProduct;
    private JTable jTable_promotionPromotedProducts;
    private JTextField jTextField_promotionProductName;
    private JButton jButton_promotionProductSupprimer;
    private DefaultTableModel modelJTable_promotionPromotedProducts;
    private JLabel jLabel_discountRate;
    private JTextField jTextField_discountRate;
    private JLabel jLabel_prixDeVente;
    private JTextField jTextField_prixDeVente;
    private JLabel jLabel_promotionResult;
    private JButton jButton_promotionProductAjouter;
    private JComboBox jComboBox_promotionCat;
    private JComboBox jComboBox_promotionSubcat;
    private JComboBox jComboBox_promotionResult;
    private JButton jButton_addStock;
    private JButton jButton_promotionProductRechercher;
    private JButton jButton_promotionProductEffacer;
    private JTextField jTextField_customerID;
    private JTextField jTextField_customerEmail;
    private JLabel jLabel_customerEmail;
    private JTextField jTextField_customerLastname;
    private JLabel jLabel_customerLastname;
    private JLabel jLabel_Firstname;
    private JTextField jTextField_customerFirstname;
    private JTextField jTextField_customerPassword;
    private JLabel jLabel_customerPassword;
    private JTextField jTextField_customerBirthday;
    private JLabel jLabel_customerBirthday;
    private JLabel jLabel_customerCreationDate;
    private JTextField jTextField_customerCreationDate;
    private JTable jTable_customer;
    private JButton jButton_customerSupprimer;
    private JButton jButton_customerModifier;
    private JScrollPane scrollPane;
    private DefaultTableModel  modelJTable_customer;
}
